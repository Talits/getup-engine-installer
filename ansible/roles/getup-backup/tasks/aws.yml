---
- name: Check database-backup cronjob
  command: >
    {{ oc }}
    get cronjobs/database-backup
    -n {{ getupcloud_namespace }}
    -o name
    --ignore-not-found
  register: oc_database_backup

- name: Create database-backup cronjob
  command: |
    oc run database-backup
    -n "{{ getupcloud_namespace }}"
    --env 'AWS_ACCESS_KEY_ID={{ getupcloud_backup_storage_s3_accesskey | default("") }}'
    --env 'AWS_SECRET_ACCESS_KEY={{ getupcloud_backup_storage_s3_secretkey | default("") }}'
    --env 'AWS_REGION={{ getupcloud_backup_storage_s3_region | default("") }}'
    --env 'AWS_S3_BUCKET_NAME={{ getupcloud_backup_storage_s3_bucket | default("") }}'
    --env 'NAMESPACE={{ getupcloud_namespace }}'
    --image 'getupcloud/database-backup:latest'
    --schedule '5 2 * * *'
    --restart Never
    --labels 'job=database-backup,provider=aws,storage_type={{ getupcloud_backup_storage_kind }}'
  when: "'database-backup' not in oc_database_backup.stdout"

- name: Check AWS EBS backup cronjob
  command: >
    {{ oc }}
    get cronjobs/aws-ebs-backup
    -n {{ getupcloud_namespace }}
    -o name
    --ignore-not-found
  register: oc_ebs_backup

- name: Create AWS EBS backup cronjob
  command: |
    oc run aws-ebs-backup
    -n "{{ getupcloud_namespace }}"
    --env 'AWS_ACCESS_KEY_ID={{ getupcloud_backup_storage_s3_accesskey | default("") }}'
    --env 'AWS_SECRET_ACCESS_KEY={{ getupcloud_backup_storage_s3_secretkey | default("") }}'
    --env 'AWS_DEFAULT_REGION={{ getupcloud_backup_storage_s3_region | default("") }}'
    --env 'DEFAULT_RETENTION_DAYS={{ getupcloud_backup_retention_days | default(7) | int }}'
    --image getupcloud/aws-volume-snapshot:v1
    --schedule '5 1 * * *'
    --restart Never
    --labels 'job=aws-ebs-backup,provider=aws,storage_type={{ getupcloud_backup_storage_kind }}'
  when: "'aws-ebs-backup' not in oc_ebs_backup.stdout"
