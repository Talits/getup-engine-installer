---
#- name: Check database-backup cronjob
#  command: >
#    {{ oc }}
#    get cronjobs/database-backup
#    -n {{ getupcloud_namespace }}
#    -o name
#    --ignore-not-found
#  register: oc_database_backup
#
#- name: Create database-backup cronjob
#  command: |
#    oc run database-backup
#    -n "{{ getupcloud_namespace }}"
#    --env 'AWS_ACCESS_KEY_ID={{ getupcloud_backup_storage_s3_accesskey | default("") }}'
#    --env 'AWS_SECRET_ACCESS_KEY={{ getupcloud_backup_storage_s3_secretkey | default("") }}'
#    --env 'AWS_REGION={{ getupcloud_backup_storage_s3_region | default("") }}'
#    --env 'AWS_S3_BUCKET_NAME={{ getupcloud_backup_storage_s3_bucket | default("") }}'
#    --env 'NAMESPACE={{ getupcloud_namespace }}'
#    --image 'getupcloud/database-backup:latest'
#    --schedule '5 2 * * *'
#    --restart Never
#    --labels 'job=database-backup,provider=aws,storage_type={{ getupcloud_backup_storage_kind }}'
#  when: "'database-backup' not in oc_database_backup.stdout"

- name: Create GCE Disk backup cronjob
  block:
    - oc_secret:
        state: present
        name: gce-service-account
        namespace: "{{ getupcloud_namespace }}"
        contents:
          - path: service_account.json
            data: "{{ lookup('file', getupcloud_backup_gce_service_account_json) | to_json}}"

    - command: |
        {{ oc }} delete cronjobs/volume-backup -n "{{ getupcloud_namespace }}"

    - command: |
        {{ oc }} run volume-backup -n "{{ getupcloud_namespace }}"
        --env 'GOOGLE_APPLICATION_CREDENTIALS=/config/service_account.json'
        --env 'GOOGLE_ZONE={{ getupcloud_backup_gce_zone }}'
        --env 'DEFAULT_RETENTION_DAYS={{ getupcloud_backup_retention_days | default(7) | int }}'
        --image getupcloud/volume-backup:latest
        --schedule '5 1 * * *'
        --restart Never
        --labels 'job=volume-backup,provider=gce'
        --limits=cpu=100m,memory=256Mi
        --requests=cpu=100m,memory=256Mi

    - command: |
        {{ oc }} volume cronjob/volume-backup -n "{{ getupcloud_namespace }}"
        --add --mount-path=/config/
        --secret-name=gce-service-account --name=service-account
  when: getupcloud_backup_gce_service_account_json is file
  with_items: getupcloud_backup_gce_zones
