#!/bin/bash

export STATE_BACKEND="s3://getup-cluster-state-$(md5sum <<<getup| awk '{print $1}')"
export TERRAFORM_STATE_FILE="${STATE_DIR}/terraform.tfstate"

if [ "${STATE_BACKEND%%://*}" == s3 ]; then
    function aws_state_backend()
    {
        (( ${#STATE_BACKEND_AWS_ACCESS_KEY_ID} * \
           ${#STATE_BACKEND_AWS_SECRET_ACCESS_KEY} * \
           ${#AWS_DEFAULT_REGION} > 0 )) || return

        AWS_ACCESS_KEY_ID=${STATE_BACKEND_AWS_ACCESS_KEY_ID} \
        AWS_SECRET_ACCESS_KEY=${STATE_BACKEND_AWS_SECRET_ACCESS_KEY} \
        AWS_DEFAULT_REGION=${STATE_BACKEND_AWS_DEFAULT_REGION} \
        aws "$@"
    }

    function setup_state_backend()
    {
        (( ${#STATE_BACKEND_AWS_ACCESS_KEY_ID} * \
           ${#STATE_BACKEND_AWS_SECRET_ACCESS_KEY} * \
           ${#AWS_DEFAULT_REGION} > 0 )) || return

        local BUCKET_NAME=${STATE_BACKEND#s3://}
        local CREATE_BUCKET_CONFIG=""

        if [ ${STATE_BACKEND_AWS_DEFAULT_REGION} != "us-east-1" ]; then
            CREATE_BUCKET_CONFIG="LocationConstraint=${STATE_BACKEND_AWS_DEFAULT_REGION}"
        fi

        #AWS_S3_BUCKET_NAME=${BUCKET_NAME} \
        #    envsubst < /getup-engine/state-backend/$PROVIDER-backend.tf.in > $STATE_DIR/$PROVIDER-backend.tf
        #
        #ln -fs $STATE_DIR/$PROVIDER-backend.tf /getup-engine/terraform/$PROVIDER/backend.tf

        {
            aws_state_backend s3api head-bucket --bucket ${BUCKET_NAME} && has_bucket=1 || has_bucket=0
            #__aws s3api head-object --bucket ${BUCKET_NAME} --key terraform/state/terraform.tfstate && has_state_file=1 || has_state_file=0
        } &>/dev/null

        if [ $has_bucket -eq 0 ]; then
            echo Creating state backend bucket $STATE_BACKEND
            aws_state_backend s3api create-bucket --bucket ${BUCKET_NAME} \
                    --acl private ${CREATE_BUCKET_CONFIG:+--create-bucket-configuration $CREATE_BUCKET_CONFIG}
            sleep 5
            aws_state_backend s3api put-bucket-versioning --bucket ${BUCKET_NAME} --versioning-configuration Status=Enabled
        fi

        #( cd /getup-engine/terraform/$PROVIDER && ${TERRAFORM_BIN} init )
        #
        #if [ $has_state_file -eq 0 ]; then
        #    if [ -e $STATE_DIR/terraform.tfstate ]; then
        #        echo Pushing existing state to backend
        #        ( cd /getup-engine/terraform/$PROVIDER && terraform state push $STATE_DIR/terraform.tfstate )
        #        mv -v $STATE_DIR/terraform.tfstate $STATE_DIR/terraform.tfstate.backup.$(date +%Y%m%d-%H%M%S-%Z)
        #    fi
        #fi
    }
else
    echo
    echo 'WARNING: Invalid state backend' $STATE_BACKEND
    echo 'WARNING: Invalid state backend' $STATE_BACKEND
    echo 'WARNING: Invalid state backend' $STATE_BACKEND
    echo
fi
