#!/usr/bin/env python3.6
# -*- coding: utf-8 -*-
#
# args: domain ansible_varname [names...]
#
from __future__ import print_function
import json, sys, os
(domain, ansible_varname), names = sys.argv[1:3], sys.argv[3:]

certfile, keyfile = [ os.path.join(os.environ['CERTS_DIR'], domain) + '.' + ext for ext in ('crt', 'key') ]
cafile = os.path.join(os.environ['CERTS_DIR'], 'ca-' + domain) + '.crt'

config={}

COLOR_YELLOW = '\x1b[1;33;40m'
COLOR_RED = '\x1b[1;31;40m'
COLOR_GREEN = '\x1b[1;32;40m'
COLOR_RESET = '\x1b[0m'

print(COLOR_YELLOW, '\nSearching Custom Certificates:', domain, COLOR_RESET, file=sys.stderr)
print(file=sys.stderr)


def checkfile(filename, keyname, config):
    if os.path.exists(filename):
        config[keyname] = filename
        print(COLOR_GREEN, " ✓", end='', file=sys.stderr)
    else:
        print(COLOR_RED, " ✗", end='', file=sys.stderr)
    print(" --->", filename, COLOR_RESET, file=sys.stderr)

checkfile(certfile, 'certfile', config)
checkfile(keyfile, 'keyfile', config)
checkfile(cafile, 'cafile', config)

print(file=sys.stderr)

if names:
    config['names'] = sorted(set(names))

exit_code = 0 if ('certfile' in config and 'keyfile' in config) else 1

if ansible_varname == 'openshift_master_named_certificates':
    config = [ config ]

print('%s=%s' % (ansible_varname, json.dumps(config, separators=(',',':'))))
sys.exit(exit_code)
