#!/bin/bash

set -e

version=v3.9

if [ $# -lt 1 ]; then
    echo "Usage: $0 cluster-name [version=$version] [docker-run-options...]"
    exit 0
fi

cluster_name=${1}
shift

if [ -d "${cluster_name}" ]; then
    state_dir=$(realpath ${cluster_name})
else
    state_dir=$(realpath ./state/${cluster_name})
fi

if [ -e $state_dir/.suffix ]; then
    export IMAGE_SUFFIX=$(<$state_dir/.suffix)
    echo IMAGE_SUFFIX=$IMAGE_SUFFIX
elif [ -e .suffix ]; then
    export IMAGE_SUFFIX=$(<.suffix)
    echo IMAGE_SUFFIX=$IMAGE_SUFFIX
fi

name=${state_dir##*/}
container_name=getup-engine${IMAGE_SUFFIX}-${name}

if [ $# -gt 0 ]; then
    image=getup-engine${IMAGE_SUFFIX}:${1}
    shift
else
    image=getup-engine${IMAGE_SUFFIX}:$version
fi

if ! [ -d "$state_dir" ]; then
    echo Invalid state dir: $state_dir
    exit 1
fi

echo
echo "Image:     $image"
echo "Container: $container_name"
echo "State dir: $state_dir"
echo

# Prepend cluster search domain
search=$(grep search /etc/resolv.conf | cut -f2- -d' ')

# setup permissions
if [ $(command -v chcon) ]; then
    sudo chcon -R -t svirt_sandbox_file_t ${state_dir}
fi
if [ $(id -u 1000 2> /dev/null ) ]; then
    sudo chown 1000 -R ${state_dir}
fi

sudo chgrp -R $(id -g) ${state_dir}

bin/open-state ${state_dir}

if ! grep CLUSTER_ID -qw $state_dir/getupengine.env; then
    echo "Invalid file: getupengine.env"
    exit 1
fi

set -a
source $state_dir/getupengine.env
set +a

state_backend_vars=(
    STATE_BACKEND_AWS_ACCESS_KEY_ID
    STATE_BACKEND_AWS_SECRET_ACCESS_KEY
    STATE_BACKEND_AWS_DEFAULT_REGION
)

for var in ${state_backend_vars[*]}; do
    if ! [ -v $var ]; then
        read -sp "$var: " $var
        echo
    fi
done

if [ -n "$STATE_BACKEND_AWS_ACCESS_KEY_ID" -a "${#STATE_BACKEND_AWS_ACCESS_KEY_ID}" -ne 20 ]; then
    echo Invalid STATE_BACKEND_AWS_ACCESS_KEY_ID length: ${#STATE_BACKEND_AWS_ACCESS_KEY_ID}
    exit 1
fi

if [ -n "$STATE_BACKEND_AWS_SECRET_ACCESS_KEY" -a "${#STATE_BACKEND_AWS_SECRET_ACCESS_KEY}" -ne 40 ]; then
    echo Invalid STATE_BACKEND_AWS_SECRET_ACCESS_KEY length: ${#STATE_BACKEND_AWS_SECRET_ACCESS_KEY}
    exit 1
fi

echo "---> Starting container ${container_name} from image $image"
trap "$PWD/bin/close-state ${state_dir}" EXIT

sudo docker run -it --rm $@ \
    -v ${state_dir}/:/state \
    --env-file ${state_dir}/getupengine.env \
    -e "STATE_KEY=${STATE_KEY}" \
    -e "STATE_BACKEND_AWS_ACCESS_KEY_ID=$STATE_BACKEND_AWS_ACCESS_KEY_ID" \
    -e "STATE_BACKEND_AWS_SECRET_ACCESS_KEY=$STATE_BACKEND_AWS_SECRET_ACCESS_KEY" \
    -e "STATE_BACKEND_AWS_DEFAULT_REGION=$STATE_BACKEND_AWS_DEFAULT_REGION" \
    --name ${container_name} \
    ${CLUSTER_ZONE:+--dns-search $CLUSTER_ZONE} \
    $(for dom in $search; do [ $CLUSTER_ZONE != $dom ] && echo --dns-search $dom; done) \
    $image bash
