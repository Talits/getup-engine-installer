#!/bin/bash

set -e

if [ $# -lt 2 ]; then
    echo "Usage: $0 cluster-name version [docker-run-options...]"
    exit 0
fi


if [ -d "${1}" ]; then
    state_dir=$(realpath ${1})
else
    state_dir=$(realpath ./state/${1})
fi
shift

name=${state_dir##*/}
container_name=getup-engine-${name}
image=getup-engine:${1}
shift

if ! [ -d "$state_dir" ]; then
    echo Invalid state dir: $state_dir
    exit 1
fi

echo
echo "Image:     $image"
echo "Container: $container_name"
echo "State dir: $state_dir"
echo

# Read id_rsa content

if [ -z "${ID_RSA}" ]; then
    if [ -r "${ID_RSA_FILE}" ]; then
        ID_RSA="$(<$ID_RSA_FILE)"
    elif [ -r "$state_dir/id_rsa" ]; then
        ID_RSA="$(<$state_dir/id_rsa)"
    elif [ -r "~/.ssh/id_rsa" ]; then
        ID_RSA="$(<~/.ssh/id_rsa)"
    else
        echo "Missing ssh private key"
        exit 1
    fi
fi

# Prepend cluster search domain
eval cluster_zone=$(awk -F= '/^CLUSTER_ZONE=/{print $2}' ${state_dir}/getupengine.env 2>/dev/null)
search=$(grep search /etc/resolv.conf | cut -f2- -d' ')

# setup permissions
sudo chcon -R -t svirt_sandbox_file_t ${state_dir}
sudo chown 1000 -R ${state_dir}
sudo chgrp $(id -g) -R ${state_dir}

echo "---> Starting container ${container_name} from image $image"
sudo docker run -it --rm $@ \
    -v ${state_dir}/:/state \
    --env-file ${state_dir}/getupengine.env \
    -e "ID_RSA=${ID_RSA}" \
    --name ${container_name} \
    ${cluster_zone:+--dns-search $cluster_zone} \
    $(for dom in $search; do [ $cluster_zone != $dom ] && echo --dns-search $dom; done) \
    $image bash
