#!/bin/bash

export INSTALLER_VERSION=$2
declare -r INSTALLER_VERSION
source prepare-container
shift

set -eu

echo
echo "Image:     $image_name"
echo "Container: $container_name"
echo "State dir: $state_dir"
echo

if [ -e $state_dir/getupengine.env -a -e $state_dir/getupengine.env.enc ] && \
   [ $state_dir/getupengine.env.enc -nt $state_dir/getupengine.env ]; then
    echo "Fail: Potentially unsaved data: $state_dir/getupengine.env.inc is newer than $state_dir/getupengine.env"
    exit 1
fi

# Prepend cluster search domain
search=$(grep search /etc/resolv.conf | cut -f2- -d' ')

# setup permissions
if [ $(command -v chcon) ]; then
    sudo chcon -R -t svirt_sandbox_file_t ${state_dir}
fi
if [ $(id -u 1000 2> /dev/null ) ]; then
    sudo chown 1000 -R ${state_dir}
fi

sudo chgrp -R $(id -g) ${state_dir}

if ! [ -v STATE_KEY ]; then
    STATE_KEY=""
fi

bin/open-state ${state_dir}

if ! grep CLUSTER_ID -qw $state_dir/getupengine.env; then
    echo "Invalid file: getupengine.env"
    exit 1
fi

set -a
source $state_dir/getupengine.env 
set +a

state_backend_vars=(
    STATE_BACKEND_AWS_ACCESS_KEY_ID
    STATE_BACKEND_AWS_SECRET_ACCESS_KEY
    STATE_BACKEND_AWS_DEFAULT_REGION
)

for var in ${state_backend_vars[*]}; do
    if ! [ -v $var ]; then
        read -sp "$var (empty to ignore): " $var
        echo
    fi

    [ "${#STATE_BACKEND_AWS_ACCESS_KEY_ID}" -eq 0 ] && break
done

if [ -v STATE_BACKEND_AWS_ACCESS_KEY_ID -a -v STATE_BACKEND_AWS_SECRET_ACCESS_KEY ]; then
    if [ "${#STATE_BACKEND_AWS_ACCESS_KEY_ID}" -ne 20 ]; then
        echo Invalid STATE_BACKEND_AWS_ACCESS_KEY_ID length: ${#STATE_BACKEND_AWS_ACCESS_KEY_ID}
        exit 1
    fi

    if [ "${#STATE_BACKEND_AWS_SECRET_ACCESS_KEY}" -ne 40 ]; then
        echo Invalid STATE_BACKEND_AWS_SECRET_ACCESS_KEY length: ${#STATE_BACKEND_AWS_SECRET_ACCESS_KEY}
        exit 1
    fi
else
    STATE_BACKEND_AWS_ACCESS_KEY_ID=""
    STATE_BACKEND_AWS_SECRET_ACCESS_KEY=""
    STATE_BACKEND_AWS_DEFAULT_REGION=""
fi

echo "---> Starting container ${container_name} from image $image_name"
trap "STATE_KEY=$STATE_KEY $PWD/bin/close-state ${state_dir}" EXIT

sudo docker run -it --rm $@ \
    -v ${state_dir}/:/state \
    --env-file ${state_dir}/getupengine.env \
    -e "STATE_KEY=${STATE_KEY}" \
    -e "STATE_BACKEND_AWS_ACCESS_KEY_ID=$STATE_BACKEND_AWS_ACCESS_KEY_ID" \
    -e "STATE_BACKEND_AWS_SECRET_ACCESS_KEY=$STATE_BACKEND_AWS_SECRET_ACCESS_KEY" \
    -e "STATE_BACKEND_AWS_DEFAULT_REGION=$STATE_BACKEND_AWS_DEFAULT_REGION" \
    --name ${container_name} \
    ${CLUSTER_ZONE:+--dns-search $CLUSTER_ZONE} \
    $(for dom in $search; do [ $CLUSTER_ZONE != $dom ] && echo --dns-search $dom; done) \
    $image_name bash
