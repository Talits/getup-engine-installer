apiVersion: v1
kind: DeploymentConfig
metadata:
  creationTimestamp: null
  labels:
    app: "{{ database_service_name }}"
  name: "{{ database_service_name }}"
spec:
  replicas: 1
  selector:
    app: "{{ database_service_name }}"
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: "{{ database_service_name }}"
        backup: "true"
    spec:
      containers:
      - env:
        - name: MYSQL_USER
          value: "{{ database_username }}"
        - name: MYSQL_PASSWORD
          value: "{{ database_password }}"
        - name: MYSQL_DATABASE
          value: "{{ database_name }}"
        image: docker.io/centos/mysql-57-centos7
        imagePullPolicy: IfNotPresent
        name: mysql
        ports:
        - containerPort: 3306
          protocol: TCP
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/mysql/data
          name: mysql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: "{{ database_service_name }}"
